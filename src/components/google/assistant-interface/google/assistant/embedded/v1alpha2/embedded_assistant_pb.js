/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../../../../google/api/annotations_pb.js');
var google_type_latlng_pb = require('../../../../google/type/latlng_pb.js');
goog.exportSymbol('proto.google.assistant.embedded.v1alpha2.AssistConfig', null, global);
goog.exportSymbol('proto.google.assistant.embedded.v1alpha2.AssistRequest', null, global);
goog.exportSymbol('proto.google.assistant.embedded.v1alpha2.AssistResponse', null, global);
goog.exportSymbol('proto.google.assistant.embedded.v1alpha2.AssistResponse.EventType', null, global);
goog.exportSymbol('proto.google.assistant.embedded.v1alpha2.AudioInConfig', null, global);
goog.exportSymbol('proto.google.assistant.embedded.v1alpha2.AudioInConfig.Encoding', null, global);
goog.exportSymbol('proto.google.assistant.embedded.v1alpha2.AudioOut', null, global);
goog.exportSymbol('proto.google.assistant.embedded.v1alpha2.AudioOutConfig', null, global);
goog.exportSymbol('proto.google.assistant.embedded.v1alpha2.AudioOutConfig.Encoding', null, global);
goog.exportSymbol('proto.google.assistant.embedded.v1alpha2.DebugConfig', null, global);
goog.exportSymbol('proto.google.assistant.embedded.v1alpha2.DebugInfo', null, global);
goog.exportSymbol('proto.google.assistant.embedded.v1alpha2.DeviceAction', null, global);
goog.exportSymbol('proto.google.assistant.embedded.v1alpha2.DeviceConfig', null, global);
goog.exportSymbol('proto.google.assistant.embedded.v1alpha2.DeviceLocation', null, global);
goog.exportSymbol('proto.google.assistant.embedded.v1alpha2.DialogStateIn', null, global);
goog.exportSymbol('proto.google.assistant.embedded.v1alpha2.DialogStateOut', null, global);
goog.exportSymbol('proto.google.assistant.embedded.v1alpha2.DialogStateOut.MicrophoneMode', null, global);
goog.exportSymbol('proto.google.assistant.embedded.v1alpha2.ScreenOut', null, global);
goog.exportSymbol('proto.google.assistant.embedded.v1alpha2.ScreenOut.Format', null, global);
goog.exportSymbol('proto.google.assistant.embedded.v1alpha2.ScreenOutConfig', null, global);
goog.exportSymbol('proto.google.assistant.embedded.v1alpha2.ScreenOutConfig.ScreenMode', null, global);
goog.exportSymbol('proto.google.assistant.embedded.v1alpha2.SpeechRecognitionResult', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.assistant.embedded.v1alpha2.AssistRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.google.assistant.embedded.v1alpha2.AssistRequest.oneofGroups_);
};
goog.inherits(proto.google.assistant.embedded.v1alpha2.AssistRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.assistant.embedded.v1alpha2.AssistRequest.displayName = 'proto.google.assistant.embedded.v1alpha2.AssistRequest';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.google.assistant.embedded.v1alpha2.AssistRequest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.google.assistant.embedded.v1alpha2.AssistRequest.TypeCase = {
  TYPE_NOT_SET: 0,
  CONFIG: 1,
  AUDIO_IN: 2
};

/**
 * @return {proto.google.assistant.embedded.v1alpha2.AssistRequest.TypeCase}
 */
proto.google.assistant.embedded.v1alpha2.AssistRequest.prototype.getTypeCase = function() {
  return /** @type {proto.google.assistant.embedded.v1alpha2.AssistRequest.TypeCase} */(jspb.Message.computeOneofCase(this, proto.google.assistant.embedded.v1alpha2.AssistRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.assistant.embedded.v1alpha2.AssistRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.assistant.embedded.v1alpha2.AssistRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.assistant.embedded.v1alpha2.AssistRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.assistant.embedded.v1alpha2.AssistRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    config: (f = msg.getConfig()) && proto.google.assistant.embedded.v1alpha2.AssistConfig.toObject(includeInstance, f),
    audioIn: msg.getAudioIn_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.assistant.embedded.v1alpha2.AssistRequest}
 */
proto.google.assistant.embedded.v1alpha2.AssistRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.assistant.embedded.v1alpha2.AssistRequest;
  return proto.google.assistant.embedded.v1alpha2.AssistRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.assistant.embedded.v1alpha2.AssistRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.assistant.embedded.v1alpha2.AssistRequest}
 */
proto.google.assistant.embedded.v1alpha2.AssistRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.assistant.embedded.v1alpha2.AssistConfig;
      reader.readMessage(value,proto.google.assistant.embedded.v1alpha2.AssistConfig.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAudioIn(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.assistant.embedded.v1alpha2.AssistRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.assistant.embedded.v1alpha2.AssistRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.assistant.embedded.v1alpha2.AssistRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.assistant.embedded.v1alpha2.AssistRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.assistant.embedded.v1alpha2.AssistConfig.serializeBinaryToWriter
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional AssistConfig config = 1;
 * @return {?proto.google.assistant.embedded.v1alpha2.AssistConfig}
 */
proto.google.assistant.embedded.v1alpha2.AssistRequest.prototype.getConfig = function() {
  return /** @type{?proto.google.assistant.embedded.v1alpha2.AssistConfig} */ (
    jspb.Message.getWrapperField(this, proto.google.assistant.embedded.v1alpha2.AssistConfig, 1));
};


/** @param {?proto.google.assistant.embedded.v1alpha2.AssistConfig|undefined} value */
proto.google.assistant.embedded.v1alpha2.AssistRequest.prototype.setConfig = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.google.assistant.embedded.v1alpha2.AssistRequest.oneofGroups_[0], value);
};


proto.google.assistant.embedded.v1alpha2.AssistRequest.prototype.clearConfig = function() {
  this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.google.assistant.embedded.v1alpha2.AssistRequest.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes audio_in = 2;
 * @return {!(string|Uint8Array)}
 */
proto.google.assistant.embedded.v1alpha2.AssistRequest.prototype.getAudioIn = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes audio_in = 2;
 * This is a type-conversion wrapper around `getAudioIn()`
 * @return {string}
 */
proto.google.assistant.embedded.v1alpha2.AssistRequest.prototype.getAudioIn_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAudioIn()));
};


/**
 * optional bytes audio_in = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAudioIn()`
 * @return {!Uint8Array}
 */
proto.google.assistant.embedded.v1alpha2.AssistRequest.prototype.getAudioIn_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAudioIn()));
};


/** @param {!(string|Uint8Array)} value */
proto.google.assistant.embedded.v1alpha2.AssistRequest.prototype.setAudioIn = function(value) {
  jspb.Message.setOneofField(this, 2, proto.google.assistant.embedded.v1alpha2.AssistRequest.oneofGroups_[0], value);
};


proto.google.assistant.embedded.v1alpha2.AssistRequest.prototype.clearAudioIn = function() {
  jspb.Message.setOneofField(this, 2, proto.google.assistant.embedded.v1alpha2.AssistRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.google.assistant.embedded.v1alpha2.AssistRequest.prototype.hasAudioIn = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.assistant.embedded.v1alpha2.AssistResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.assistant.embedded.v1alpha2.AssistResponse.repeatedFields_, null);
};
goog.inherits(proto.google.assistant.embedded.v1alpha2.AssistResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.assistant.embedded.v1alpha2.AssistResponse.displayName = 'proto.google.assistant.embedded.v1alpha2.AssistResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.assistant.embedded.v1alpha2.AssistResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.assistant.embedded.v1alpha2.AssistResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.google.assistant.embedded.v1alpha2.AssistResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.assistant.embedded.v1alpha2.AssistResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.assistant.embedded.v1alpha2.AssistResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    eventType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    audioOut: (f = msg.getAudioOut()) && proto.google.assistant.embedded.v1alpha2.AudioOut.toObject(includeInstance, f),
    screenOut: (f = msg.getScreenOut()) && proto.google.assistant.embedded.v1alpha2.ScreenOut.toObject(includeInstance, f),
    deviceAction: (f = msg.getDeviceAction()) && proto.google.assistant.embedded.v1alpha2.DeviceAction.toObject(includeInstance, f),
    speechResultsList: jspb.Message.toObjectList(msg.getSpeechResultsList(),
    proto.google.assistant.embedded.v1alpha2.SpeechRecognitionResult.toObject, includeInstance),
    dialogStateOut: (f = msg.getDialogStateOut()) && proto.google.assistant.embedded.v1alpha2.DialogStateOut.toObject(includeInstance, f),
    debugInfo: (f = msg.getDebugInfo()) && proto.google.assistant.embedded.v1alpha2.DebugInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.assistant.embedded.v1alpha2.AssistResponse}
 */
proto.google.assistant.embedded.v1alpha2.AssistResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.assistant.embedded.v1alpha2.AssistResponse;
  return proto.google.assistant.embedded.v1alpha2.AssistResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.assistant.embedded.v1alpha2.AssistResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.assistant.embedded.v1alpha2.AssistResponse}
 */
proto.google.assistant.embedded.v1alpha2.AssistResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.google.assistant.embedded.v1alpha2.AssistResponse.EventType} */ (reader.readEnum());
      msg.setEventType(value);
      break;
    case 3:
      var value = new proto.google.assistant.embedded.v1alpha2.AudioOut;
      reader.readMessage(value,proto.google.assistant.embedded.v1alpha2.AudioOut.deserializeBinaryFromReader);
      msg.setAudioOut(value);
      break;
    case 4:
      var value = new proto.google.assistant.embedded.v1alpha2.ScreenOut;
      reader.readMessage(value,proto.google.assistant.embedded.v1alpha2.ScreenOut.deserializeBinaryFromReader);
      msg.setScreenOut(value);
      break;
    case 6:
      var value = new proto.google.assistant.embedded.v1alpha2.DeviceAction;
      reader.readMessage(value,proto.google.assistant.embedded.v1alpha2.DeviceAction.deserializeBinaryFromReader);
      msg.setDeviceAction(value);
      break;
    case 2:
      var value = new proto.google.assistant.embedded.v1alpha2.SpeechRecognitionResult;
      reader.readMessage(value,proto.google.assistant.embedded.v1alpha2.SpeechRecognitionResult.deserializeBinaryFromReader);
      msg.addSpeechResults(value);
      break;
    case 5:
      var value = new proto.google.assistant.embedded.v1alpha2.DialogStateOut;
      reader.readMessage(value,proto.google.assistant.embedded.v1alpha2.DialogStateOut.deserializeBinaryFromReader);
      msg.setDialogStateOut(value);
      break;
    case 8:
      var value = new proto.google.assistant.embedded.v1alpha2.DebugInfo;
      reader.readMessage(value,proto.google.assistant.embedded.v1alpha2.DebugInfo.deserializeBinaryFromReader);
      msg.setDebugInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.assistant.embedded.v1alpha2.AssistResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.assistant.embedded.v1alpha2.AssistResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.assistant.embedded.v1alpha2.AssistResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.assistant.embedded.v1alpha2.AssistResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEventType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getAudioOut();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.google.assistant.embedded.v1alpha2.AudioOut.serializeBinaryToWriter
    );
  }
  f = message.getScreenOut();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.google.assistant.embedded.v1alpha2.ScreenOut.serializeBinaryToWriter
    );
  }
  f = message.getDeviceAction();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.google.assistant.embedded.v1alpha2.DeviceAction.serializeBinaryToWriter
    );
  }
  f = message.getSpeechResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.google.assistant.embedded.v1alpha2.SpeechRecognitionResult.serializeBinaryToWriter
    );
  }
  f = message.getDialogStateOut();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.google.assistant.embedded.v1alpha2.DialogStateOut.serializeBinaryToWriter
    );
  }
  f = message.getDebugInfo();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.google.assistant.embedded.v1alpha2.DebugInfo.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.google.assistant.embedded.v1alpha2.AssistResponse.EventType = {
  EVENT_TYPE_UNSPECIFIED: 0,
  END_OF_UTTERANCE: 1
};

/**
 * optional EventType event_type = 1;
 * @return {!proto.google.assistant.embedded.v1alpha2.AssistResponse.EventType}
 */
proto.google.assistant.embedded.v1alpha2.AssistResponse.prototype.getEventType = function() {
  return /** @type {!proto.google.assistant.embedded.v1alpha2.AssistResponse.EventType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.google.assistant.embedded.v1alpha2.AssistResponse.EventType} value */
proto.google.assistant.embedded.v1alpha2.AssistResponse.prototype.setEventType = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional AudioOut audio_out = 3;
 * @return {?proto.google.assistant.embedded.v1alpha2.AudioOut}
 */
proto.google.assistant.embedded.v1alpha2.AssistResponse.prototype.getAudioOut = function() {
  return /** @type{?proto.google.assistant.embedded.v1alpha2.AudioOut} */ (
    jspb.Message.getWrapperField(this, proto.google.assistant.embedded.v1alpha2.AudioOut, 3));
};


/** @param {?proto.google.assistant.embedded.v1alpha2.AudioOut|undefined} value */
proto.google.assistant.embedded.v1alpha2.AssistResponse.prototype.setAudioOut = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.google.assistant.embedded.v1alpha2.AssistResponse.prototype.clearAudioOut = function() {
  this.setAudioOut(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.google.assistant.embedded.v1alpha2.AssistResponse.prototype.hasAudioOut = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ScreenOut screen_out = 4;
 * @return {?proto.google.assistant.embedded.v1alpha2.ScreenOut}
 */
proto.google.assistant.embedded.v1alpha2.AssistResponse.prototype.getScreenOut = function() {
  return /** @type{?proto.google.assistant.embedded.v1alpha2.ScreenOut} */ (
    jspb.Message.getWrapperField(this, proto.google.assistant.embedded.v1alpha2.ScreenOut, 4));
};


/** @param {?proto.google.assistant.embedded.v1alpha2.ScreenOut|undefined} value */
proto.google.assistant.embedded.v1alpha2.AssistResponse.prototype.setScreenOut = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.google.assistant.embedded.v1alpha2.AssistResponse.prototype.clearScreenOut = function() {
  this.setScreenOut(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.google.assistant.embedded.v1alpha2.AssistResponse.prototype.hasScreenOut = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional DeviceAction device_action = 6;
 * @return {?proto.google.assistant.embedded.v1alpha2.DeviceAction}
 */
proto.google.assistant.embedded.v1alpha2.AssistResponse.prototype.getDeviceAction = function() {
  return /** @type{?proto.google.assistant.embedded.v1alpha2.DeviceAction} */ (
    jspb.Message.getWrapperField(this, proto.google.assistant.embedded.v1alpha2.DeviceAction, 6));
};


/** @param {?proto.google.assistant.embedded.v1alpha2.DeviceAction|undefined} value */
proto.google.assistant.embedded.v1alpha2.AssistResponse.prototype.setDeviceAction = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.google.assistant.embedded.v1alpha2.AssistResponse.prototype.clearDeviceAction = function() {
  this.setDeviceAction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.google.assistant.embedded.v1alpha2.AssistResponse.prototype.hasDeviceAction = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * repeated SpeechRecognitionResult speech_results = 2;
 * @return {!Array.<!proto.google.assistant.embedded.v1alpha2.SpeechRecognitionResult>}
 */
proto.google.assistant.embedded.v1alpha2.AssistResponse.prototype.getSpeechResultsList = function() {
  return /** @type{!Array.<!proto.google.assistant.embedded.v1alpha2.SpeechRecognitionResult>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.assistant.embedded.v1alpha2.SpeechRecognitionResult, 2));
};


/** @param {!Array.<!proto.google.assistant.embedded.v1alpha2.SpeechRecognitionResult>} value */
proto.google.assistant.embedded.v1alpha2.AssistResponse.prototype.setSpeechResultsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.google.assistant.embedded.v1alpha2.SpeechRecognitionResult=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.assistant.embedded.v1alpha2.SpeechRecognitionResult}
 */
proto.google.assistant.embedded.v1alpha2.AssistResponse.prototype.addSpeechResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.google.assistant.embedded.v1alpha2.SpeechRecognitionResult, opt_index);
};


proto.google.assistant.embedded.v1alpha2.AssistResponse.prototype.clearSpeechResultsList = function() {
  this.setSpeechResultsList([]);
};


/**
 * optional DialogStateOut dialog_state_out = 5;
 * @return {?proto.google.assistant.embedded.v1alpha2.DialogStateOut}
 */
proto.google.assistant.embedded.v1alpha2.AssistResponse.prototype.getDialogStateOut = function() {
  return /** @type{?proto.google.assistant.embedded.v1alpha2.DialogStateOut} */ (
    jspb.Message.getWrapperField(this, proto.google.assistant.embedded.v1alpha2.DialogStateOut, 5));
};


/** @param {?proto.google.assistant.embedded.v1alpha2.DialogStateOut|undefined} value */
proto.google.assistant.embedded.v1alpha2.AssistResponse.prototype.setDialogStateOut = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.google.assistant.embedded.v1alpha2.AssistResponse.prototype.clearDialogStateOut = function() {
  this.setDialogStateOut(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.google.assistant.embedded.v1alpha2.AssistResponse.prototype.hasDialogStateOut = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional DebugInfo debug_info = 8;
 * @return {?proto.google.assistant.embedded.v1alpha2.DebugInfo}
 */
proto.google.assistant.embedded.v1alpha2.AssistResponse.prototype.getDebugInfo = function() {
  return /** @type{?proto.google.assistant.embedded.v1alpha2.DebugInfo} */ (
    jspb.Message.getWrapperField(this, proto.google.assistant.embedded.v1alpha2.DebugInfo, 8));
};


/** @param {?proto.google.assistant.embedded.v1alpha2.DebugInfo|undefined} value */
proto.google.assistant.embedded.v1alpha2.AssistResponse.prototype.setDebugInfo = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.google.assistant.embedded.v1alpha2.AssistResponse.prototype.clearDebugInfo = function() {
  this.setDebugInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.google.assistant.embedded.v1alpha2.AssistResponse.prototype.hasDebugInfo = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.assistant.embedded.v1alpha2.DebugInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.assistant.embedded.v1alpha2.DebugInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.assistant.embedded.v1alpha2.DebugInfo.displayName = 'proto.google.assistant.embedded.v1alpha2.DebugInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.assistant.embedded.v1alpha2.DebugInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.google.assistant.embedded.v1alpha2.DebugInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.assistant.embedded.v1alpha2.DebugInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.assistant.embedded.v1alpha2.DebugInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    aogAgentToAssistantJson: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.assistant.embedded.v1alpha2.DebugInfo}
 */
proto.google.assistant.embedded.v1alpha2.DebugInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.assistant.embedded.v1alpha2.DebugInfo;
  return proto.google.assistant.embedded.v1alpha2.DebugInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.assistant.embedded.v1alpha2.DebugInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.assistant.embedded.v1alpha2.DebugInfo}
 */
proto.google.assistant.embedded.v1alpha2.DebugInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAogAgentToAssistantJson(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.assistant.embedded.v1alpha2.DebugInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.assistant.embedded.v1alpha2.DebugInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.assistant.embedded.v1alpha2.DebugInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.assistant.embedded.v1alpha2.DebugInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAogAgentToAssistantJson();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string aog_agent_to_assistant_json = 1;
 * @return {string}
 */
proto.google.assistant.embedded.v1alpha2.DebugInfo.prototype.getAogAgentToAssistantJson = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.google.assistant.embedded.v1alpha2.DebugInfo.prototype.setAogAgentToAssistantJson = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.assistant.embedded.v1alpha2.AssistConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.google.assistant.embedded.v1alpha2.AssistConfig.oneofGroups_);
};
goog.inherits(proto.google.assistant.embedded.v1alpha2.AssistConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.assistant.embedded.v1alpha2.AssistConfig.displayName = 'proto.google.assistant.embedded.v1alpha2.AssistConfig';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.google.assistant.embedded.v1alpha2.AssistConfig.oneofGroups_ = [[1,6]];

/**
 * @enum {number}
 */
proto.google.assistant.embedded.v1alpha2.AssistConfig.TypeCase = {
  TYPE_NOT_SET: 0,
  AUDIO_IN_CONFIG: 1,
  TEXT_QUERY: 6
};

/**
 * @return {proto.google.assistant.embedded.v1alpha2.AssistConfig.TypeCase}
 */
proto.google.assistant.embedded.v1alpha2.AssistConfig.prototype.getTypeCase = function() {
  return /** @type {proto.google.assistant.embedded.v1alpha2.AssistConfig.TypeCase} */(jspb.Message.computeOneofCase(this, proto.google.assistant.embedded.v1alpha2.AssistConfig.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.assistant.embedded.v1alpha2.AssistConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.google.assistant.embedded.v1alpha2.AssistConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.assistant.embedded.v1alpha2.AssistConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.assistant.embedded.v1alpha2.AssistConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    audioInConfig: (f = msg.getAudioInConfig()) && proto.google.assistant.embedded.v1alpha2.AudioInConfig.toObject(includeInstance, f),
    textQuery: jspb.Message.getFieldWithDefault(msg, 6, ""),
    audioOutConfig: (f = msg.getAudioOutConfig()) && proto.google.assistant.embedded.v1alpha2.AudioOutConfig.toObject(includeInstance, f),
    screenOutConfig: (f = msg.getScreenOutConfig()) && proto.google.assistant.embedded.v1alpha2.ScreenOutConfig.toObject(includeInstance, f),
    dialogStateIn: (f = msg.getDialogStateIn()) && proto.google.assistant.embedded.v1alpha2.DialogStateIn.toObject(includeInstance, f),
    deviceConfig: (f = msg.getDeviceConfig()) && proto.google.assistant.embedded.v1alpha2.DeviceConfig.toObject(includeInstance, f),
    debugConfig: (f = msg.getDebugConfig()) && proto.google.assistant.embedded.v1alpha2.DebugConfig.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.assistant.embedded.v1alpha2.AssistConfig}
 */
proto.google.assistant.embedded.v1alpha2.AssistConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.assistant.embedded.v1alpha2.AssistConfig;
  return proto.google.assistant.embedded.v1alpha2.AssistConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.assistant.embedded.v1alpha2.AssistConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.assistant.embedded.v1alpha2.AssistConfig}
 */
proto.google.assistant.embedded.v1alpha2.AssistConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.assistant.embedded.v1alpha2.AudioInConfig;
      reader.readMessage(value,proto.google.assistant.embedded.v1alpha2.AudioInConfig.deserializeBinaryFromReader);
      msg.setAudioInConfig(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setTextQuery(value);
      break;
    case 2:
      var value = new proto.google.assistant.embedded.v1alpha2.AudioOutConfig;
      reader.readMessage(value,proto.google.assistant.embedded.v1alpha2.AudioOutConfig.deserializeBinaryFromReader);
      msg.setAudioOutConfig(value);
      break;
    case 8:
      var value = new proto.google.assistant.embedded.v1alpha2.ScreenOutConfig;
      reader.readMessage(value,proto.google.assistant.embedded.v1alpha2.ScreenOutConfig.deserializeBinaryFromReader);
      msg.setScreenOutConfig(value);
      break;
    case 3:
      var value = new proto.google.assistant.embedded.v1alpha2.DialogStateIn;
      reader.readMessage(value,proto.google.assistant.embedded.v1alpha2.DialogStateIn.deserializeBinaryFromReader);
      msg.setDialogStateIn(value);
      break;
    case 4:
      var value = new proto.google.assistant.embedded.v1alpha2.DeviceConfig;
      reader.readMessage(value,proto.google.assistant.embedded.v1alpha2.DeviceConfig.deserializeBinaryFromReader);
      msg.setDeviceConfig(value);
      break;
    case 5:
      var value = new proto.google.assistant.embedded.v1alpha2.DebugConfig;
      reader.readMessage(value,proto.google.assistant.embedded.v1alpha2.DebugConfig.deserializeBinaryFromReader);
      msg.setDebugConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.assistant.embedded.v1alpha2.AssistConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.assistant.embedded.v1alpha2.AssistConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.assistant.embedded.v1alpha2.AssistConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.assistant.embedded.v1alpha2.AssistConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAudioInConfig();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.assistant.embedded.v1alpha2.AudioInConfig.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getAudioOutConfig();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.assistant.embedded.v1alpha2.AudioOutConfig.serializeBinaryToWriter
    );
  }
  f = message.getScreenOutConfig();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.google.assistant.embedded.v1alpha2.ScreenOutConfig.serializeBinaryToWriter
    );
  }
  f = message.getDialogStateIn();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.google.assistant.embedded.v1alpha2.DialogStateIn.serializeBinaryToWriter
    );
  }
  f = message.getDeviceConfig();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.google.assistant.embedded.v1alpha2.DeviceConfig.serializeBinaryToWriter
    );
  }
  f = message.getDebugConfig();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.google.assistant.embedded.v1alpha2.DebugConfig.serializeBinaryToWriter
    );
  }
};


/**
 * optional AudioInConfig audio_in_config = 1;
 * @return {?proto.google.assistant.embedded.v1alpha2.AudioInConfig}
 */
proto.google.assistant.embedded.v1alpha2.AssistConfig.prototype.getAudioInConfig = function() {
  return /** @type{?proto.google.assistant.embedded.v1alpha2.AudioInConfig} */ (
    jspb.Message.getWrapperField(this, proto.google.assistant.embedded.v1alpha2.AudioInConfig, 1));
};


/** @param {?proto.google.assistant.embedded.v1alpha2.AudioInConfig|undefined} value */
proto.google.assistant.embedded.v1alpha2.AssistConfig.prototype.setAudioInConfig = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.google.assistant.embedded.v1alpha2.AssistConfig.oneofGroups_[0], value);
};


proto.google.assistant.embedded.v1alpha2.AssistConfig.prototype.clearAudioInConfig = function() {
  this.setAudioInConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.google.assistant.embedded.v1alpha2.AssistConfig.prototype.hasAudioInConfig = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string text_query = 6;
 * @return {string}
 */
proto.google.assistant.embedded.v1alpha2.AssistConfig.prototype.getTextQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.google.assistant.embedded.v1alpha2.AssistConfig.prototype.setTextQuery = function(value) {
  jspb.Message.setOneofField(this, 6, proto.google.assistant.embedded.v1alpha2.AssistConfig.oneofGroups_[0], value);
};


proto.google.assistant.embedded.v1alpha2.AssistConfig.prototype.clearTextQuery = function() {
  jspb.Message.setOneofField(this, 6, proto.google.assistant.embedded.v1alpha2.AssistConfig.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.google.assistant.embedded.v1alpha2.AssistConfig.prototype.hasTextQuery = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional AudioOutConfig audio_out_config = 2;
 * @return {?proto.google.assistant.embedded.v1alpha2.AudioOutConfig}
 */
proto.google.assistant.embedded.v1alpha2.AssistConfig.prototype.getAudioOutConfig = function() {
  return /** @type{?proto.google.assistant.embedded.v1alpha2.AudioOutConfig} */ (
    jspb.Message.getWrapperField(this, proto.google.assistant.embedded.v1alpha2.AudioOutConfig, 2));
};


/** @param {?proto.google.assistant.embedded.v1alpha2.AudioOutConfig|undefined} value */
proto.google.assistant.embedded.v1alpha2.AssistConfig.prototype.setAudioOutConfig = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.google.assistant.embedded.v1alpha2.AssistConfig.prototype.clearAudioOutConfig = function() {
  this.setAudioOutConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.google.assistant.embedded.v1alpha2.AssistConfig.prototype.hasAudioOutConfig = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ScreenOutConfig screen_out_config = 8;
 * @return {?proto.google.assistant.embedded.v1alpha2.ScreenOutConfig}
 */
proto.google.assistant.embedded.v1alpha2.AssistConfig.prototype.getScreenOutConfig = function() {
  return /** @type{?proto.google.assistant.embedded.v1alpha2.ScreenOutConfig} */ (
    jspb.Message.getWrapperField(this, proto.google.assistant.embedded.v1alpha2.ScreenOutConfig, 8));
};


/** @param {?proto.google.assistant.embedded.v1alpha2.ScreenOutConfig|undefined} value */
proto.google.assistant.embedded.v1alpha2.AssistConfig.prototype.setScreenOutConfig = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


proto.google.assistant.embedded.v1alpha2.AssistConfig.prototype.clearScreenOutConfig = function() {
  this.setScreenOutConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.google.assistant.embedded.v1alpha2.AssistConfig.prototype.hasScreenOutConfig = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional DialogStateIn dialog_state_in = 3;
 * @return {?proto.google.assistant.embedded.v1alpha2.DialogStateIn}
 */
proto.google.assistant.embedded.v1alpha2.AssistConfig.prototype.getDialogStateIn = function() {
  return /** @type{?proto.google.assistant.embedded.v1alpha2.DialogStateIn} */ (
    jspb.Message.getWrapperField(this, proto.google.assistant.embedded.v1alpha2.DialogStateIn, 3));
};


/** @param {?proto.google.assistant.embedded.v1alpha2.DialogStateIn|undefined} value */
proto.google.assistant.embedded.v1alpha2.AssistConfig.prototype.setDialogStateIn = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.google.assistant.embedded.v1alpha2.AssistConfig.prototype.clearDialogStateIn = function() {
  this.setDialogStateIn(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.google.assistant.embedded.v1alpha2.AssistConfig.prototype.hasDialogStateIn = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional DeviceConfig device_config = 4;
 * @return {?proto.google.assistant.embedded.v1alpha2.DeviceConfig}
 */
proto.google.assistant.embedded.v1alpha2.AssistConfig.prototype.getDeviceConfig = function() {
  return /** @type{?proto.google.assistant.embedded.v1alpha2.DeviceConfig} */ (
    jspb.Message.getWrapperField(this, proto.google.assistant.embedded.v1alpha2.DeviceConfig, 4));
};


/** @param {?proto.google.assistant.embedded.v1alpha2.DeviceConfig|undefined} value */
proto.google.assistant.embedded.v1alpha2.AssistConfig.prototype.setDeviceConfig = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.google.assistant.embedded.v1alpha2.AssistConfig.prototype.clearDeviceConfig = function() {
  this.setDeviceConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.google.assistant.embedded.v1alpha2.AssistConfig.prototype.hasDeviceConfig = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional DebugConfig debug_config = 5;
 * @return {?proto.google.assistant.embedded.v1alpha2.DebugConfig}
 */
proto.google.assistant.embedded.v1alpha2.AssistConfig.prototype.getDebugConfig = function() {
  return /** @type{?proto.google.assistant.embedded.v1alpha2.DebugConfig} */ (
    jspb.Message.getWrapperField(this, proto.google.assistant.embedded.v1alpha2.DebugConfig, 5));
};


/** @param {?proto.google.assistant.embedded.v1alpha2.DebugConfig|undefined} value */
proto.google.assistant.embedded.v1alpha2.AssistConfig.prototype.setDebugConfig = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.google.assistant.embedded.v1alpha2.AssistConfig.prototype.clearDebugConfig = function() {
  this.setDebugConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.google.assistant.embedded.v1alpha2.AssistConfig.prototype.hasDebugConfig = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.assistant.embedded.v1alpha2.AudioInConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.assistant.embedded.v1alpha2.AudioInConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.assistant.embedded.v1alpha2.AudioInConfig.displayName = 'proto.google.assistant.embedded.v1alpha2.AudioInConfig';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.assistant.embedded.v1alpha2.AudioInConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.google.assistant.embedded.v1alpha2.AudioInConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.assistant.embedded.v1alpha2.AudioInConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.assistant.embedded.v1alpha2.AudioInConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    encoding: jspb.Message.getFieldWithDefault(msg, 1, 0),
    sampleRateHertz: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.assistant.embedded.v1alpha2.AudioInConfig}
 */
proto.google.assistant.embedded.v1alpha2.AudioInConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.assistant.embedded.v1alpha2.AudioInConfig;
  return proto.google.assistant.embedded.v1alpha2.AudioInConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.assistant.embedded.v1alpha2.AudioInConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.assistant.embedded.v1alpha2.AudioInConfig}
 */
proto.google.assistant.embedded.v1alpha2.AudioInConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.google.assistant.embedded.v1alpha2.AudioInConfig.Encoding} */ (reader.readEnum());
      msg.setEncoding(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSampleRateHertz(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.assistant.embedded.v1alpha2.AudioInConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.assistant.embedded.v1alpha2.AudioInConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.assistant.embedded.v1alpha2.AudioInConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.assistant.embedded.v1alpha2.AudioInConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEncoding();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getSampleRateHertz();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.google.assistant.embedded.v1alpha2.AudioInConfig.Encoding = {
  ENCODING_UNSPECIFIED: 0,
  LINEAR16: 1,
  FLAC: 2
};

/**
 * optional Encoding encoding = 1;
 * @return {!proto.google.assistant.embedded.v1alpha2.AudioInConfig.Encoding}
 */
proto.google.assistant.embedded.v1alpha2.AudioInConfig.prototype.getEncoding = function() {
  return /** @type {!proto.google.assistant.embedded.v1alpha2.AudioInConfig.Encoding} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.google.assistant.embedded.v1alpha2.AudioInConfig.Encoding} value */
proto.google.assistant.embedded.v1alpha2.AudioInConfig.prototype.setEncoding = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 sample_rate_hertz = 2;
 * @return {number}
 */
proto.google.assistant.embedded.v1alpha2.AudioInConfig.prototype.getSampleRateHertz = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.google.assistant.embedded.v1alpha2.AudioInConfig.prototype.setSampleRateHertz = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.assistant.embedded.v1alpha2.AudioOutConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.assistant.embedded.v1alpha2.AudioOutConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.assistant.embedded.v1alpha2.AudioOutConfig.displayName = 'proto.google.assistant.embedded.v1alpha2.AudioOutConfig';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.assistant.embedded.v1alpha2.AudioOutConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.google.assistant.embedded.v1alpha2.AudioOutConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.assistant.embedded.v1alpha2.AudioOutConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.assistant.embedded.v1alpha2.AudioOutConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    encoding: jspb.Message.getFieldWithDefault(msg, 1, 0),
    sampleRateHertz: jspb.Message.getFieldWithDefault(msg, 2, 0),
    volumePercentage: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.assistant.embedded.v1alpha2.AudioOutConfig}
 */
proto.google.assistant.embedded.v1alpha2.AudioOutConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.assistant.embedded.v1alpha2.AudioOutConfig;
  return proto.google.assistant.embedded.v1alpha2.AudioOutConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.assistant.embedded.v1alpha2.AudioOutConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.assistant.embedded.v1alpha2.AudioOutConfig}
 */
proto.google.assistant.embedded.v1alpha2.AudioOutConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.google.assistant.embedded.v1alpha2.AudioOutConfig.Encoding} */ (reader.readEnum());
      msg.setEncoding(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSampleRateHertz(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVolumePercentage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.assistant.embedded.v1alpha2.AudioOutConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.assistant.embedded.v1alpha2.AudioOutConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.assistant.embedded.v1alpha2.AudioOutConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.assistant.embedded.v1alpha2.AudioOutConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEncoding();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getSampleRateHertz();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getVolumePercentage();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.google.assistant.embedded.v1alpha2.AudioOutConfig.Encoding = {
  ENCODING_UNSPECIFIED: 0,
  LINEAR16: 1,
  MP3: 2,
  OPUS_IN_OGG: 3
};

/**
 * optional Encoding encoding = 1;
 * @return {!proto.google.assistant.embedded.v1alpha2.AudioOutConfig.Encoding}
 */
proto.google.assistant.embedded.v1alpha2.AudioOutConfig.prototype.getEncoding = function() {
  return /** @type {!proto.google.assistant.embedded.v1alpha2.AudioOutConfig.Encoding} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.google.assistant.embedded.v1alpha2.AudioOutConfig.Encoding} value */
proto.google.assistant.embedded.v1alpha2.AudioOutConfig.prototype.setEncoding = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 sample_rate_hertz = 2;
 * @return {number}
 */
proto.google.assistant.embedded.v1alpha2.AudioOutConfig.prototype.getSampleRateHertz = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.google.assistant.embedded.v1alpha2.AudioOutConfig.prototype.setSampleRateHertz = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 volume_percentage = 3;
 * @return {number}
 */
proto.google.assistant.embedded.v1alpha2.AudioOutConfig.prototype.getVolumePercentage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.google.assistant.embedded.v1alpha2.AudioOutConfig.prototype.setVolumePercentage = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.assistant.embedded.v1alpha2.ScreenOutConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.assistant.embedded.v1alpha2.ScreenOutConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.assistant.embedded.v1alpha2.ScreenOutConfig.displayName = 'proto.google.assistant.embedded.v1alpha2.ScreenOutConfig';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.assistant.embedded.v1alpha2.ScreenOutConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.google.assistant.embedded.v1alpha2.ScreenOutConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.assistant.embedded.v1alpha2.ScreenOutConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.assistant.embedded.v1alpha2.ScreenOutConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    screenMode: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.assistant.embedded.v1alpha2.ScreenOutConfig}
 */
proto.google.assistant.embedded.v1alpha2.ScreenOutConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.assistant.embedded.v1alpha2.ScreenOutConfig;
  return proto.google.assistant.embedded.v1alpha2.ScreenOutConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.assistant.embedded.v1alpha2.ScreenOutConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.assistant.embedded.v1alpha2.ScreenOutConfig}
 */
proto.google.assistant.embedded.v1alpha2.ScreenOutConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.google.assistant.embedded.v1alpha2.ScreenOutConfig.ScreenMode} */ (reader.readEnum());
      msg.setScreenMode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.assistant.embedded.v1alpha2.ScreenOutConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.assistant.embedded.v1alpha2.ScreenOutConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.assistant.embedded.v1alpha2.ScreenOutConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.assistant.embedded.v1alpha2.ScreenOutConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScreenMode();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.google.assistant.embedded.v1alpha2.ScreenOutConfig.ScreenMode = {
  SCREEN_MODE_UNSPECIFIED: 0,
  OFF: 1,
  PLAYING: 3
};

/**
 * optional ScreenMode screen_mode = 1;
 * @return {!proto.google.assistant.embedded.v1alpha2.ScreenOutConfig.ScreenMode}
 */
proto.google.assistant.embedded.v1alpha2.ScreenOutConfig.prototype.getScreenMode = function() {
  return /** @type {!proto.google.assistant.embedded.v1alpha2.ScreenOutConfig.ScreenMode} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.google.assistant.embedded.v1alpha2.ScreenOutConfig.ScreenMode} value */
proto.google.assistant.embedded.v1alpha2.ScreenOutConfig.prototype.setScreenMode = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.assistant.embedded.v1alpha2.DialogStateIn = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.assistant.embedded.v1alpha2.DialogStateIn, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.assistant.embedded.v1alpha2.DialogStateIn.displayName = 'proto.google.assistant.embedded.v1alpha2.DialogStateIn';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.assistant.embedded.v1alpha2.DialogStateIn.prototype.toObject = function(opt_includeInstance) {
  return proto.google.assistant.embedded.v1alpha2.DialogStateIn.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.assistant.embedded.v1alpha2.DialogStateIn} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.assistant.embedded.v1alpha2.DialogStateIn.toObject = function(includeInstance, msg) {
  var f, obj = {
    conversationState: msg.getConversationState_asB64(),
    languageCode: jspb.Message.getFieldWithDefault(msg, 2, ""),
    deviceLocation: (f = msg.getDeviceLocation()) && proto.google.assistant.embedded.v1alpha2.DeviceLocation.toObject(includeInstance, f),
    isNewConversation: jspb.Message.getFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.assistant.embedded.v1alpha2.DialogStateIn}
 */
proto.google.assistant.embedded.v1alpha2.DialogStateIn.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.assistant.embedded.v1alpha2.DialogStateIn;
  return proto.google.assistant.embedded.v1alpha2.DialogStateIn.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.assistant.embedded.v1alpha2.DialogStateIn} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.assistant.embedded.v1alpha2.DialogStateIn}
 */
proto.google.assistant.embedded.v1alpha2.DialogStateIn.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setConversationState(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLanguageCode(value);
      break;
    case 5:
      var value = new proto.google.assistant.embedded.v1alpha2.DeviceLocation;
      reader.readMessage(value,proto.google.assistant.embedded.v1alpha2.DeviceLocation.deserializeBinaryFromReader);
      msg.setDeviceLocation(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsNewConversation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.assistant.embedded.v1alpha2.DialogStateIn.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.assistant.embedded.v1alpha2.DialogStateIn.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.assistant.embedded.v1alpha2.DialogStateIn} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.assistant.embedded.v1alpha2.DialogStateIn.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getConversationState_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getLanguageCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDeviceLocation();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.google.assistant.embedded.v1alpha2.DeviceLocation.serializeBinaryToWriter
    );
  }
  f = message.getIsNewConversation();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * optional bytes conversation_state = 1;
 * @return {!(string|Uint8Array)}
 */
proto.google.assistant.embedded.v1alpha2.DialogStateIn.prototype.getConversationState = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes conversation_state = 1;
 * This is a type-conversion wrapper around `getConversationState()`
 * @return {string}
 */
proto.google.assistant.embedded.v1alpha2.DialogStateIn.prototype.getConversationState_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getConversationState()));
};


/**
 * optional bytes conversation_state = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getConversationState()`
 * @return {!Uint8Array}
 */
proto.google.assistant.embedded.v1alpha2.DialogStateIn.prototype.getConversationState_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getConversationState()));
};


/** @param {!(string|Uint8Array)} value */
proto.google.assistant.embedded.v1alpha2.DialogStateIn.prototype.setConversationState = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string language_code = 2;
 * @return {string}
 */
proto.google.assistant.embedded.v1alpha2.DialogStateIn.prototype.getLanguageCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.google.assistant.embedded.v1alpha2.DialogStateIn.prototype.setLanguageCode = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional DeviceLocation device_location = 5;
 * @return {?proto.google.assistant.embedded.v1alpha2.DeviceLocation}
 */
proto.google.assistant.embedded.v1alpha2.DialogStateIn.prototype.getDeviceLocation = function() {
  return /** @type{?proto.google.assistant.embedded.v1alpha2.DeviceLocation} */ (
    jspb.Message.getWrapperField(this, proto.google.assistant.embedded.v1alpha2.DeviceLocation, 5));
};


/** @param {?proto.google.assistant.embedded.v1alpha2.DeviceLocation|undefined} value */
proto.google.assistant.embedded.v1alpha2.DialogStateIn.prototype.setDeviceLocation = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.google.assistant.embedded.v1alpha2.DialogStateIn.prototype.clearDeviceLocation = function() {
  this.setDeviceLocation(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.google.assistant.embedded.v1alpha2.DialogStateIn.prototype.hasDeviceLocation = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool is_new_conversation = 7;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.google.assistant.embedded.v1alpha2.DialogStateIn.prototype.getIsNewConversation = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 7, false));
};


/** @param {boolean} value */
proto.google.assistant.embedded.v1alpha2.DialogStateIn.prototype.setIsNewConversation = function(value) {
  jspb.Message.setField(this, 7, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.assistant.embedded.v1alpha2.DeviceConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.assistant.embedded.v1alpha2.DeviceConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.assistant.embedded.v1alpha2.DeviceConfig.displayName = 'proto.google.assistant.embedded.v1alpha2.DeviceConfig';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.assistant.embedded.v1alpha2.DeviceConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.google.assistant.embedded.v1alpha2.DeviceConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.assistant.embedded.v1alpha2.DeviceConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.assistant.embedded.v1alpha2.DeviceConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    deviceId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    deviceModelId: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.assistant.embedded.v1alpha2.DeviceConfig}
 */
proto.google.assistant.embedded.v1alpha2.DeviceConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.assistant.embedded.v1alpha2.DeviceConfig;
  return proto.google.assistant.embedded.v1alpha2.DeviceConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.assistant.embedded.v1alpha2.DeviceConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.assistant.embedded.v1alpha2.DeviceConfig}
 */
proto.google.assistant.embedded.v1alpha2.DeviceConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceModelId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.assistant.embedded.v1alpha2.DeviceConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.assistant.embedded.v1alpha2.DeviceConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.assistant.embedded.v1alpha2.DeviceConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.assistant.embedded.v1alpha2.DeviceConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeviceId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDeviceModelId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string device_id = 1;
 * @return {string}
 */
proto.google.assistant.embedded.v1alpha2.DeviceConfig.prototype.getDeviceId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.google.assistant.embedded.v1alpha2.DeviceConfig.prototype.setDeviceId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string device_model_id = 3;
 * @return {string}
 */
proto.google.assistant.embedded.v1alpha2.DeviceConfig.prototype.getDeviceModelId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.google.assistant.embedded.v1alpha2.DeviceConfig.prototype.setDeviceModelId = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.assistant.embedded.v1alpha2.AudioOut = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.assistant.embedded.v1alpha2.AudioOut, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.assistant.embedded.v1alpha2.AudioOut.displayName = 'proto.google.assistant.embedded.v1alpha2.AudioOut';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.assistant.embedded.v1alpha2.AudioOut.prototype.toObject = function(opt_includeInstance) {
  return proto.google.assistant.embedded.v1alpha2.AudioOut.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.assistant.embedded.v1alpha2.AudioOut} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.assistant.embedded.v1alpha2.AudioOut.toObject = function(includeInstance, msg) {
  var f, obj = {
    audioData: msg.getAudioData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.assistant.embedded.v1alpha2.AudioOut}
 */
proto.google.assistant.embedded.v1alpha2.AudioOut.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.assistant.embedded.v1alpha2.AudioOut;
  return proto.google.assistant.embedded.v1alpha2.AudioOut.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.assistant.embedded.v1alpha2.AudioOut} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.assistant.embedded.v1alpha2.AudioOut}
 */
proto.google.assistant.embedded.v1alpha2.AudioOut.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAudioData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.assistant.embedded.v1alpha2.AudioOut.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.assistant.embedded.v1alpha2.AudioOut.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.assistant.embedded.v1alpha2.AudioOut} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.assistant.embedded.v1alpha2.AudioOut.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAudioData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes audio_data = 1;
 * @return {!(string|Uint8Array)}
 */
proto.google.assistant.embedded.v1alpha2.AudioOut.prototype.getAudioData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes audio_data = 1;
 * This is a type-conversion wrapper around `getAudioData()`
 * @return {string}
 */
proto.google.assistant.embedded.v1alpha2.AudioOut.prototype.getAudioData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAudioData()));
};


/**
 * optional bytes audio_data = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAudioData()`
 * @return {!Uint8Array}
 */
proto.google.assistant.embedded.v1alpha2.AudioOut.prototype.getAudioData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAudioData()));
};


/** @param {!(string|Uint8Array)} value */
proto.google.assistant.embedded.v1alpha2.AudioOut.prototype.setAudioData = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.assistant.embedded.v1alpha2.ScreenOut = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.assistant.embedded.v1alpha2.ScreenOut, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.assistant.embedded.v1alpha2.ScreenOut.displayName = 'proto.google.assistant.embedded.v1alpha2.ScreenOut';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.assistant.embedded.v1alpha2.ScreenOut.prototype.toObject = function(opt_includeInstance) {
  return proto.google.assistant.embedded.v1alpha2.ScreenOut.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.assistant.embedded.v1alpha2.ScreenOut} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.assistant.embedded.v1alpha2.ScreenOut.toObject = function(includeInstance, msg) {
  var f, obj = {
    format: jspb.Message.getFieldWithDefault(msg, 1, 0),
    data: msg.getData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.assistant.embedded.v1alpha2.ScreenOut}
 */
proto.google.assistant.embedded.v1alpha2.ScreenOut.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.assistant.embedded.v1alpha2.ScreenOut;
  return proto.google.assistant.embedded.v1alpha2.ScreenOut.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.assistant.embedded.v1alpha2.ScreenOut} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.assistant.embedded.v1alpha2.ScreenOut}
 */
proto.google.assistant.embedded.v1alpha2.ScreenOut.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.google.assistant.embedded.v1alpha2.ScreenOut.Format} */ (reader.readEnum());
      msg.setFormat(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.assistant.embedded.v1alpha2.ScreenOut.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.assistant.embedded.v1alpha2.ScreenOut.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.assistant.embedded.v1alpha2.ScreenOut} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.assistant.embedded.v1alpha2.ScreenOut.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFormat();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.google.assistant.embedded.v1alpha2.ScreenOut.Format = {
  FORMAT_UNSPECIFIED: 0,
  HTML: 1
};

/**
 * optional Format format = 1;
 * @return {!proto.google.assistant.embedded.v1alpha2.ScreenOut.Format}
 */
proto.google.assistant.embedded.v1alpha2.ScreenOut.prototype.getFormat = function() {
  return /** @type {!proto.google.assistant.embedded.v1alpha2.ScreenOut.Format} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.google.assistant.embedded.v1alpha2.ScreenOut.Format} value */
proto.google.assistant.embedded.v1alpha2.ScreenOut.prototype.setFormat = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional bytes data = 2;
 * @return {!(string|Uint8Array)}
 */
proto.google.assistant.embedded.v1alpha2.ScreenOut.prototype.getData = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes data = 2;
 * This is a type-conversion wrapper around `getData()`
 * @return {string}
 */
proto.google.assistant.embedded.v1alpha2.ScreenOut.prototype.getData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getData()));
};


/**
 * optional bytes data = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getData()`
 * @return {!Uint8Array}
 */
proto.google.assistant.embedded.v1alpha2.ScreenOut.prototype.getData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getData()));
};


/** @param {!(string|Uint8Array)} value */
proto.google.assistant.embedded.v1alpha2.ScreenOut.prototype.setData = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.assistant.embedded.v1alpha2.DeviceAction = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.assistant.embedded.v1alpha2.DeviceAction, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.assistant.embedded.v1alpha2.DeviceAction.displayName = 'proto.google.assistant.embedded.v1alpha2.DeviceAction';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.assistant.embedded.v1alpha2.DeviceAction.prototype.toObject = function(opt_includeInstance) {
  return proto.google.assistant.embedded.v1alpha2.DeviceAction.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.assistant.embedded.v1alpha2.DeviceAction} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.assistant.embedded.v1alpha2.DeviceAction.toObject = function(includeInstance, msg) {
  var f, obj = {
    deviceRequestJson: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.assistant.embedded.v1alpha2.DeviceAction}
 */
proto.google.assistant.embedded.v1alpha2.DeviceAction.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.assistant.embedded.v1alpha2.DeviceAction;
  return proto.google.assistant.embedded.v1alpha2.DeviceAction.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.assistant.embedded.v1alpha2.DeviceAction} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.assistant.embedded.v1alpha2.DeviceAction}
 */
proto.google.assistant.embedded.v1alpha2.DeviceAction.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceRequestJson(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.assistant.embedded.v1alpha2.DeviceAction.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.assistant.embedded.v1alpha2.DeviceAction.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.assistant.embedded.v1alpha2.DeviceAction} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.assistant.embedded.v1alpha2.DeviceAction.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeviceRequestJson();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string device_request_json = 1;
 * @return {string}
 */
proto.google.assistant.embedded.v1alpha2.DeviceAction.prototype.getDeviceRequestJson = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.google.assistant.embedded.v1alpha2.DeviceAction.prototype.setDeviceRequestJson = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.assistant.embedded.v1alpha2.SpeechRecognitionResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.assistant.embedded.v1alpha2.SpeechRecognitionResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.assistant.embedded.v1alpha2.SpeechRecognitionResult.displayName = 'proto.google.assistant.embedded.v1alpha2.SpeechRecognitionResult';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.assistant.embedded.v1alpha2.SpeechRecognitionResult.prototype.toObject = function(opt_includeInstance) {
  return proto.google.assistant.embedded.v1alpha2.SpeechRecognitionResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.assistant.embedded.v1alpha2.SpeechRecognitionResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.assistant.embedded.v1alpha2.SpeechRecognitionResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    transcript: jspb.Message.getFieldWithDefault(msg, 1, ""),
    stability: +jspb.Message.getFieldWithDefault(msg, 2, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.assistant.embedded.v1alpha2.SpeechRecognitionResult}
 */
proto.google.assistant.embedded.v1alpha2.SpeechRecognitionResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.assistant.embedded.v1alpha2.SpeechRecognitionResult;
  return proto.google.assistant.embedded.v1alpha2.SpeechRecognitionResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.assistant.embedded.v1alpha2.SpeechRecognitionResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.assistant.embedded.v1alpha2.SpeechRecognitionResult}
 */
proto.google.assistant.embedded.v1alpha2.SpeechRecognitionResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTranscript(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setStability(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.assistant.embedded.v1alpha2.SpeechRecognitionResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.assistant.embedded.v1alpha2.SpeechRecognitionResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.assistant.embedded.v1alpha2.SpeechRecognitionResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.assistant.embedded.v1alpha2.SpeechRecognitionResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTranscript();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStability();
  if (f !== 0.0) {
    writer.writeFloat(
      2,
      f
    );
  }
};


/**
 * optional string transcript = 1;
 * @return {string}
 */
proto.google.assistant.embedded.v1alpha2.SpeechRecognitionResult.prototype.getTranscript = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.google.assistant.embedded.v1alpha2.SpeechRecognitionResult.prototype.setTranscript = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional float stability = 2;
 * @return {number}
 */
proto.google.assistant.embedded.v1alpha2.SpeechRecognitionResult.prototype.getStability = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.google.assistant.embedded.v1alpha2.SpeechRecognitionResult.prototype.setStability = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.assistant.embedded.v1alpha2.DialogStateOut = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.assistant.embedded.v1alpha2.DialogStateOut, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.assistant.embedded.v1alpha2.DialogStateOut.displayName = 'proto.google.assistant.embedded.v1alpha2.DialogStateOut';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.assistant.embedded.v1alpha2.DialogStateOut.prototype.toObject = function(opt_includeInstance) {
  return proto.google.assistant.embedded.v1alpha2.DialogStateOut.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.assistant.embedded.v1alpha2.DialogStateOut} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.assistant.embedded.v1alpha2.DialogStateOut.toObject = function(includeInstance, msg) {
  var f, obj = {
    supplementalDisplayText: jspb.Message.getFieldWithDefault(msg, 1, ""),
    conversationState: msg.getConversationState_asB64(),
    microphoneMode: jspb.Message.getFieldWithDefault(msg, 3, 0),
    volumePercentage: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.assistant.embedded.v1alpha2.DialogStateOut}
 */
proto.google.assistant.embedded.v1alpha2.DialogStateOut.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.assistant.embedded.v1alpha2.DialogStateOut;
  return proto.google.assistant.embedded.v1alpha2.DialogStateOut.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.assistant.embedded.v1alpha2.DialogStateOut} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.assistant.embedded.v1alpha2.DialogStateOut}
 */
proto.google.assistant.embedded.v1alpha2.DialogStateOut.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSupplementalDisplayText(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setConversationState(value);
      break;
    case 3:
      var value = /** @type {!proto.google.assistant.embedded.v1alpha2.DialogStateOut.MicrophoneMode} */ (reader.readEnum());
      msg.setMicrophoneMode(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVolumePercentage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.assistant.embedded.v1alpha2.DialogStateOut.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.assistant.embedded.v1alpha2.DialogStateOut.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.assistant.embedded.v1alpha2.DialogStateOut} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.assistant.embedded.v1alpha2.DialogStateOut.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSupplementalDisplayText();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConversationState_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getMicrophoneMode();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getVolumePercentage();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.google.assistant.embedded.v1alpha2.DialogStateOut.MicrophoneMode = {
  MICROPHONE_MODE_UNSPECIFIED: 0,
  CLOSE_MICROPHONE: 1,
  DIALOG_FOLLOW_ON: 2
};

/**
 * optional string supplemental_display_text = 1;
 * @return {string}
 */
proto.google.assistant.embedded.v1alpha2.DialogStateOut.prototype.getSupplementalDisplayText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.google.assistant.embedded.v1alpha2.DialogStateOut.prototype.setSupplementalDisplayText = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional bytes conversation_state = 2;
 * @return {!(string|Uint8Array)}
 */
proto.google.assistant.embedded.v1alpha2.DialogStateOut.prototype.getConversationState = function() {
  return /** @type {!(string|Uint8Array)} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes conversation_state = 2;
 * This is a type-conversion wrapper around `getConversationState()`
 * @return {string}
 */
proto.google.assistant.embedded.v1alpha2.DialogStateOut.prototype.getConversationState_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getConversationState()));
};


/**
 * optional bytes conversation_state = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getConversationState()`
 * @return {!Uint8Array}
 */
proto.google.assistant.embedded.v1alpha2.DialogStateOut.prototype.getConversationState_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getConversationState()));
};


/** @param {!(string|Uint8Array)} value */
proto.google.assistant.embedded.v1alpha2.DialogStateOut.prototype.setConversationState = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional MicrophoneMode microphone_mode = 3;
 * @return {!proto.google.assistant.embedded.v1alpha2.DialogStateOut.MicrophoneMode}
 */
proto.google.assistant.embedded.v1alpha2.DialogStateOut.prototype.getMicrophoneMode = function() {
  return /** @type {!proto.google.assistant.embedded.v1alpha2.DialogStateOut.MicrophoneMode} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.google.assistant.embedded.v1alpha2.DialogStateOut.MicrophoneMode} value */
proto.google.assistant.embedded.v1alpha2.DialogStateOut.prototype.setMicrophoneMode = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional int32 volume_percentage = 4;
 * @return {number}
 */
proto.google.assistant.embedded.v1alpha2.DialogStateOut.prototype.getVolumePercentage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.google.assistant.embedded.v1alpha2.DialogStateOut.prototype.setVolumePercentage = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.assistant.embedded.v1alpha2.DebugConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.assistant.embedded.v1alpha2.DebugConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.assistant.embedded.v1alpha2.DebugConfig.displayName = 'proto.google.assistant.embedded.v1alpha2.DebugConfig';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.assistant.embedded.v1alpha2.DebugConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.google.assistant.embedded.v1alpha2.DebugConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.assistant.embedded.v1alpha2.DebugConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.assistant.embedded.v1alpha2.DebugConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    returnDebugInfo: jspb.Message.getFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.assistant.embedded.v1alpha2.DebugConfig}
 */
proto.google.assistant.embedded.v1alpha2.DebugConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.assistant.embedded.v1alpha2.DebugConfig;
  return proto.google.assistant.embedded.v1alpha2.DebugConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.assistant.embedded.v1alpha2.DebugConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.assistant.embedded.v1alpha2.DebugConfig}
 */
proto.google.assistant.embedded.v1alpha2.DebugConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReturnDebugInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.assistant.embedded.v1alpha2.DebugConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.assistant.embedded.v1alpha2.DebugConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.assistant.embedded.v1alpha2.DebugConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.assistant.embedded.v1alpha2.DebugConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getReturnDebugInfo();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional bool return_debug_info = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.google.assistant.embedded.v1alpha2.DebugConfig.prototype.getReturnDebugInfo = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.google.assistant.embedded.v1alpha2.DebugConfig.prototype.setReturnDebugInfo = function(value) {
  jspb.Message.setField(this, 6, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.assistant.embedded.v1alpha2.DeviceLocation = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.google.assistant.embedded.v1alpha2.DeviceLocation.oneofGroups_);
};
goog.inherits(proto.google.assistant.embedded.v1alpha2.DeviceLocation, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.google.assistant.embedded.v1alpha2.DeviceLocation.displayName = 'proto.google.assistant.embedded.v1alpha2.DeviceLocation';
}
/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.google.assistant.embedded.v1alpha2.DeviceLocation.oneofGroups_ = [[1]];

/**
 * @enum {number}
 */
proto.google.assistant.embedded.v1alpha2.DeviceLocation.TypeCase = {
  TYPE_NOT_SET: 0,
  COORDINATES: 1
};

/**
 * @return {proto.google.assistant.embedded.v1alpha2.DeviceLocation.TypeCase}
 */
proto.google.assistant.embedded.v1alpha2.DeviceLocation.prototype.getTypeCase = function() {
  return /** @type {proto.google.assistant.embedded.v1alpha2.DeviceLocation.TypeCase} */(jspb.Message.computeOneofCase(this, proto.google.assistant.embedded.v1alpha2.DeviceLocation.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.assistant.embedded.v1alpha2.DeviceLocation.prototype.toObject = function(opt_includeInstance) {
  return proto.google.assistant.embedded.v1alpha2.DeviceLocation.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.assistant.embedded.v1alpha2.DeviceLocation} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.assistant.embedded.v1alpha2.DeviceLocation.toObject = function(includeInstance, msg) {
  var f, obj = {
    coordinates: (f = msg.getCoordinates()) && google_type_latlng_pb.LatLng.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.assistant.embedded.v1alpha2.DeviceLocation}
 */
proto.google.assistant.embedded.v1alpha2.DeviceLocation.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.assistant.embedded.v1alpha2.DeviceLocation;
  return proto.google.assistant.embedded.v1alpha2.DeviceLocation.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.assistant.embedded.v1alpha2.DeviceLocation} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.assistant.embedded.v1alpha2.DeviceLocation}
 */
proto.google.assistant.embedded.v1alpha2.DeviceLocation.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_type_latlng_pb.LatLng;
      reader.readMessage(value,google_type_latlng_pb.LatLng.deserializeBinaryFromReader);
      msg.setCoordinates(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.assistant.embedded.v1alpha2.DeviceLocation.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.assistant.embedded.v1alpha2.DeviceLocation.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.assistant.embedded.v1alpha2.DeviceLocation} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.assistant.embedded.v1alpha2.DeviceLocation.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCoordinates();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_type_latlng_pb.LatLng.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.type.LatLng coordinates = 1;
 * @return {?proto.google.type.LatLng}
 */
proto.google.assistant.embedded.v1alpha2.DeviceLocation.prototype.getCoordinates = function() {
  return /** @type{?proto.google.type.LatLng} */ (
    jspb.Message.getWrapperField(this, google_type_latlng_pb.LatLng, 1));
};


/** @param {?proto.google.type.LatLng|undefined} value */
proto.google.assistant.embedded.v1alpha2.DeviceLocation.prototype.setCoordinates = function(value) {
  jspb.Message.setOneofWrapperField(this, 1, proto.google.assistant.embedded.v1alpha2.DeviceLocation.oneofGroups_[0], value);
};


proto.google.assistant.embedded.v1alpha2.DeviceLocation.prototype.clearCoordinates = function() {
  this.setCoordinates(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.google.assistant.embedded.v1alpha2.DeviceLocation.prototype.hasCoordinates = function() {
  return jspb.Message.getField(this, 1) != null;
};


goog.object.extend(exports, proto.google.assistant.embedded.v1alpha2);
